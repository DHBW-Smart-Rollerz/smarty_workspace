name: Build Test

on:
  push:
    branches:
      - jazzy*
  pull_request:
    branches:
      - jazzy*

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: osrf/ros:jazzy-desktop
    steps:
    - name: üöÄ Checkout code
      uses: actions/checkout@v3

    - name: üîß Install Dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y \
        python3-venv \
        python3-pip \
        git \
        jq

    - name: üì¶ Setup workspace
      run: |
        mkdir -p /smarty_ws/.vscode
        cp -r $GITHUB_WORKSPACE/** /smarty_ws
        bash -c "shopt -s globstar dotglob && cp -r $GITHUB_WORKSPACE/.vscode/* /smarty_ws/.vscode/"
        python3 -m venv .venv
        . .venv/bin/activate

        bash -c "source /opt/ros/jazzy/setup.bash && cd /smarty_ws && ./setup.sh"

    - name: üõ†Ô∏è Installing Base Packages
      run: |
        . .venv/bin/activate
        # Find all dependencies.repos files within the src directory
        cd /smarty_ws
        repos_files=$(find src -type f -name "dependencies.repos")

        # Check if any dependencies.repos files were found
        if [ -z "$repos_files" ]; then
            echo "No dependencies.repos files found in $BASE_DIR."
        else
            echo "Found dependencies.repos files:"
            echo "$repos_files"
        fi

        # Iterate over each found dependencies.repos file and install dependencies
        for repos_file in $repos_files; do
            echo "Installing dependencies from $repos_file"
            vcs import < "$repos_file" src/
        done

        find src/* -maxdepth 3 -name requirements.txt -exec pip install -r {} \;

    - name: üõ†Ô∏è Build packages
      run: |
        . .venv/bin/activate
        bash -c "source /opt/ros/jazzy/setup.bash && cd /smarty_ws && colcon build --event-handlers console_cohesion+"

    - name: üß™ Run tests
      run: |
        . .venv/bin/activate
        echo "Skipping tests for now"
        # bash -c "source /opt/ros/jazzy/setup.bash && cd /smarty_ws && colcon test --event-handlers console_cohesion+"

    - name: üéØ Finish
      run: echo "Build and test finished"
